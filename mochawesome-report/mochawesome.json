{
  "stats": {
    "suites": 4,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-06T08:04:22.036Z",
    "end": "2023-10-06T08:04:22.055Z",
    "duration": 19,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "17e20ae1-79e4-4a21-a9a8-57ca3787c63f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9cb9514a-984a-4e31-a2f8-a29422205ea5",
          "title": "getEvenNumbersFromArray",
          "fullFile": "/Users/tyza/projects/epamJStesters/untitled/test/numbers-validator/getEvenNumbersFromArray.spec.js",
          "file": "/test/numbers-validator/getEvenNumbersFromArray.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"getEvenNumbersFromArray\"",
              "fullTitle": "getEvenNumbersFromArray \"before each\" hook in \"getEvenNumbersFromArray\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "018bba8d-64bc-459a-a92b-4c36146cfe50",
              "parentUUID": "9cb9514a-984a-4e31-a2f8-a29422205ea5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"getEvenNumbersFromArray\"",
              "fullTitle": "getEvenNumbersFromArray \"after each\" hook in \"getEvenNumbersFromArray\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "eba03c94-e1e5-4b88-8dde-b16480f65dcc",
              "parentUUID": "9cb9514a-984a-4e31-a2f8-a29422205ea5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return an array of even numbers",
              "fullTitle": "getEvenNumbersFromArray should return an array of even numbers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrayOfNumbers = [7, 8, 4, 13, 14];\nconst evenNumbersArray = validator.getEvenNumbersFromArray(arrayOfNumbers);\nexpect(evenNumbersArray).to.be.eql([8, 4, 14]);",
              "err": {},
              "uuid": "8ee5c0d2-3039-4087-b76d-d91001ec0cf1",
              "parentUUID": "9cb9514a-984a-4e31-a2f8-a29422205ea5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if array is not full of numbers",
              "fullTitle": "getEvenNumbersFromArray should throw an error if array is not full of numbers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrayOfValues = [2, 11, '5', '8', 16];\nexpect(() => {\n  validator.getEvenNumbersFromArray(arrayOfValues);\n}).to.throw('[2,11,5,8,16] is not an array of \"Numbers\"');",
              "err": {},
              "uuid": "e4dcb8b4-b99c-4dfe-8d93-58943bb8e823",
              "parentUUID": "9cb9514a-984a-4e31-a2f8-a29422205ea5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ee5c0d2-3039-4087-b76d-d91001ec0cf1",
            "e4dcb8b4-b99c-4dfe-8d93-58943bb8e823"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "13e5e198-cb61-4feb-b3b5-9f193f219025",
          "title": "isAllNumbers positive tests",
          "fullFile": "/Users/tyza/projects/epamJStesters/untitled/test/numbers-validator/isAllNumbers.spec.js",
          "file": "/test/numbers-validator/isAllNumbers.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isAllNumbers positive tests\"",
              "fullTitle": "isAllNumbers positive tests \"before each\" hook in \"isAllNumbers positive tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "614822f4-57c4-4e41-b207-32e839d60107",
              "parentUUID": "13e5e198-cb61-4feb-b3b5-9f193f219025",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"isAllNumbers positive tests\"",
              "fullTitle": "isAllNumbers positive tests \"after each\" hook in \"isAllNumbers positive tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "d021dbb8-6fac-4eaf-9448-4a6b359e265e",
              "parentUUID": "13e5e198-cb61-4feb-b3b5-9f193f219025",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should provide true if all are numbers",
              "fullTitle": "isAllNumbers positive tests should provide true if all are numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isAllNumbers([2, 4, 1, 8, 90]);\nexpect(validationResults).to.be.equal(true);",
              "err": {},
              "uuid": "a70c1c65-9606-42e3-825f-71441bcfd3c7",
              "parentUUID": "13e5e198-cb61-4feb-b3b5-9f193f219025",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if all are not numbers",
              "fullTitle": "isAllNumbers positive tests should throw an error if all are not numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isAllNumbers('c');\n}).to.throw('[c] is not an array');",
              "err": {},
              "uuid": "3778a80f-ae6d-44d5-ab41-0e359e3910c0",
              "parentUUID": "13e5e198-cb61-4feb-b3b5-9f193f219025",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a70c1c65-9606-42e3-825f-71441bcfd3c7",
            "3778a80f-ae6d-44d5-ab41-0e359e3910c0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d93461c6-3544-4217-9a5b-1a5970de256a",
          "title": "isInteger positive tests",
          "fullFile": "/Users/tyza/projects/epamJStesters/untitled/test/numbers-validator/isInteger.spec.js",
          "file": "/test/numbers-validator/isInteger.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isInteger positive tests\"",
              "fullTitle": "isInteger positive tests \"before each\" hook in \"isInteger positive tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "c84116cf-d476-4f3a-9c79-63b6aecc3909",
              "parentUUID": "d93461c6-3544-4217-9a5b-1a5970de256a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"isInteger positive tests\"",
              "fullTitle": "isInteger positive tests \"after each\" hook in \"isInteger positive tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "1b15e187-9182-4768-9ac6-57fd5e6bd368",
              "parentUUID": "d93461c6-3544-4217-9a5b-1a5970de256a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should provide true with a number",
              "fullTitle": "isInteger positive tests should provide true with a number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isInteger(3);\nexpect(validationResults).to.be.equal(true);",
              "err": {},
              "uuid": "1aa6c418-c4e3-4263-a56f-408c8b523d00",
              "parentUUID": "d93461c6-3544-4217-9a5b-1a5970de256a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when provided a string",
              "fullTitle": "isInteger positive tests should throw an error when provided a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isInteger('7');\n}).to.throw('[7] is not a number');",
              "err": {},
              "uuid": "d5271492-f753-4fd8-ab07-66eda84b3999",
              "parentUUID": "d93461c6-3544-4217-9a5b-1a5970de256a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1aa6c418-c4e3-4263-a56f-408c8b523d00",
            "d5271492-f753-4fd8-ab07-66eda84b3999"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e99cf798-4fff-41c2-a7d4-7bb5ae3096e9",
          "title": "isNumberEven positive tests",
          "fullFile": "/Users/tyza/projects/epamJStesters/untitled/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isNumberEven positive tests\"",
              "fullTitle": "isNumberEven positive tests \"before each\" hook in \"isNumberEven positive tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "416063a4-62f2-4255-a43d-9b5fc87e0f89",
              "parentUUID": "e99cf798-4fff-41c2-a7d4-7bb5ae3096e9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"isNumberEven positive tests\"",
              "fullTitle": "isNumberEven positive tests \"after each\" hook in \"isNumberEven positive tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "ab8a57d9-4536-4d40-92ad-7b14fe459d0f",
              "parentUUID": "e99cf798-4fff-41c2-a7d4-7bb5ae3096e9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should provide true with an even number",
              "fullTitle": "isNumberEven positive tests should provide true with an even number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(4);\nexpect(validationResults).to.be.equal(true);",
              "err": {},
              "uuid": "78e5cea9-3f58-4d06-8b10-e549dd940081",
              "parentUUID": "e99cf798-4fff-41c2-a7d4-7bb5ae3096e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should provide false with an odd number",
              "fullTitle": "isNumberEven positive tests should provide false with an odd number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(5);\nexpect(validationResults).to.be.equal(false);",
              "err": {},
              "uuid": "e9c168ee-852d-4791-86dd-3daee6d7a478",
              "parentUUID": "e99cf798-4fff-41c2-a7d4-7bb5ae3096e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when provided a string",
              "fullTitle": "isNumberEven positive tests should throw an error when provided a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven('4');\n}).to.throw('[4] is not of type \"Number\" it is of type \"string\"');",
              "err": {},
              "uuid": "508404d5-3235-4898-909b-dd6212e6fbc2",
              "parentUUID": "e99cf798-4fff-41c2-a7d4-7bb5ae3096e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "78e5cea9-3f58-4d06-8b10-e549dd940081",
            "e9c168ee-852d-4791-86dd-3daee6d7a478",
            "508404d5-3235-4898-909b-dd6212e6fbc2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}